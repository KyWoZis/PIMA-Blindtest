doctype html
html
  head
    link(rel='stylesheet', href='/stylesheets/table.css')
    script(src="/javascripts/updateTable.js")
    title Music Database
  body(onload="updateTable('', db, 1);")
    table
      thead
        tr
          th(colspan=2)
            button(id='prevPage', onclick='changePage(-1)') &lt; Prev
            label(for='pageNumber') Page:
            select(id='pageNumber', onchange='changePage()', value='1')
            button(id='nextPage', onclick='changePage(1)') Next &gt;

            p(id='selectedPage') Selected Page: 1
          th(colspan=3)
            input(type='text', name='search', id='search')
          th
            button#addButton(type='button') Add
        tr
          each column, index in data[0]
            th= index
          th Actions
          // Generate headers for all columns and add an "Actions" header

      tbody#tableBody

    .overlay#addFormContainer
      #addForm
        h2 Add Data
        form#addDataForm(action='add', method='post', enctype='multipart/form-data')
          // Input fields for adding data
          label(for='musicName') Music Name
          input(type='text', name='music_name', id='musicName', required)
          br
          label(for='artistName') Artist Name
          input(type='text', name='artist_name', id='artistName', required)
          br
          label(for='origin') Origin
          input(type='text', name='origin', id='origin')
          br
          label(for='musicType') Music Type
          input(type='text', name='music_type', id='musicType')
          br
          label(for='musicFile') Upload Music File (mp4)
          input(type='file', name='music_file', id='musicFile', accept='.mp4', required)
          br
          button(type='submit') Upload
        div
          label(for='progress-bar')
          progress#progress-bar(value='0', max='100')
        button#closeButton(type='button') Close
    .overlay#editFormContainer
      #editForm
        h2 Edit Data
        form#editDataForm(action='edit', method='post', enctype='multipart/form-data')
          // Input fields for adding data
          label(for='musicName') Music Name
          input(type='text', name='music_name', id='musicName', required)
          br
          label(for='artistName') Artist Name
          input(type='text', name='artist_name', id='artistName', required)
          br
          label(for='origin') Origin
          input(type='text', name='origin', id='origin')
          br
          label(for='musicType') Music Type
          input(type='text', name='music_type', id='musicType')
          br
          button(type='submit') Upload
        button#closeButton(type='button') Close
    script.
      document.addEventListener('DOMContentLoaded', function () {
        const addButton = document.getElementById('addButton');
        const addFormContainer = document.getElementById('addFormContainer');
        const closeFormButton = document.getElementById('closeButton');
        const editFormContainer = document.getElementById('editFormContainer');
        const editButton = document.getElementById('editButton');

        addButton.addEventListener('click', function () {
          addFormContainer.style.display = 'flex';
        });

        closeFormButton.addEventListener('click', function () {
          addFormContainer.style.display = 'none';
          editFormContainer.style.display = 'none';
        });

        editButton.addEventListener('click', function (e) {
          editFormContainer.style.display = 'flex';
        });
      });

      const form = document.getElementById('addDataForm');
      const bar = document.getElementById('progress-bar');

      form.addEventListener('submit', function(e) {
        e.preventDefault();
        const formData = new FormData();
        const file = document.getElementById('musicFile');
        const img = file.files[0];
        formData.append('music_file', img);
        formData.append('music_name', document.getElementById('musicName').value);
        formData.append('artist_name', document.getElementById('artistName').value);
        formData.append('origin', document.getElementById('origin').value);
        formData.append('music_type', document.getElementById('musicType').value);
        
        const xhr = new XMLHttpRequest();

        xhr.open('POST', 'add', true);

        document.getElementById('progress-bar').style.display = 'inline'

        xhr.upload.onprogress = function (e) {
          if (e.lengthComputable) {
            const percentCompleted = Math.round((e.loaded / e.total) * 100);
            bar.setAttribute('value', percentCompleted);
            bar.previousElementSibling.textContent = `${percentCompleted}%`;
            if (percentCompleted === 100) {
              bar.previousElementSibling.textContent = `Upload complete!`;
            }
          }
        };

        xhr.onload = function () {
          // Handle the completion of the upload
          if (xhr.status >= 200 && xhr.status < 300) {
            // Successful upload
            console.log('Upload successful');

            // Check if there's a redirectTo property in the response
            try {
              const responseData = JSON.parse(xhr.responseText);
              if (responseData.redirectTo) {
                // Redirect to the specified URL
                window.location.href = responseData.redirectTo;
              }
            } catch (error) {
              console.error('Error parsing server response:', error);
            }
          } else {
            // Handle errors
            console.error('Upload failed with status:', xhr.status);
          }
        };


        xhr.onerror = function () {
          // Handle network errors
          console.error('Network error during upload');
        };

        xhr.send(formData);
      })

      //load db with data from html
      const db = !{JSON.stringify(data)};

      const searchInput = document.getElementById('search');
      //add event listener to search button
      var old_size = 0;

      searchInput.addEventListener('input', function() {
        const searchValue = searchInput.value;
        updateTable(searchValue, db, 1);
      });

      var currentPage = 1;

      function changePage(offset = 0) {
        var selectElement = document.getElementById('pageNumber');
        var selectedPageElement = document.getElementById('selectedPage');
        var prevPageButton = document.getElementById('prevPage');
        var nextPageButton = document.getElementById('nextPage');

        currentPage = parseInt(selectElement.value) + offset;

        // Update selected page
        selectElement.value = currentPage;
        selectedPageElement.innerText = 'Selected Page: ' + currentPage;

        // Enable/disable navigation buttons based on page number
        prevPageButton.disabled = currentPage <= 1;
        nextPageButton.disabled = currentPage >= selectElement.options.length;

        updateTable(searchInput.value, db, currentPage, false);
      }

      // Initialize page on load
      document.addEventListener('DOMContentLoaded', function () {
        changePage();
      });
